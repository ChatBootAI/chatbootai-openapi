/**
 * ChatBootAI
 * This is ChatBootAI specification described as OpenAPI 3.0.  ChatBoot AI allows you to interact with several user interface and back-ends following the same OpenAPI contract.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ChatResponseChoice } from './chatResponseChoice';

/**
* Represents the chat response returned by the model, based on the provided chat request.
*/
export class ChatResponse {
    /**
    * A unique identifier for the completion.
    */
    'id'?: string;
    /**
    * A list of chat completion choices. Can be more than one.
    */
    'choices': Array<ChatResponseChoice>;
    /**
    * The object type, which is always \"chat\"
    */
    'object': ChatResponse.ObjectEnum;
    /**
    * The Unix timestamp (in seconds) of when the completion was created.
    */
    'created'?: number;
    /**
    * The model used for the chat completion.
    */
    'model'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "choices",
            "baseName": "choices",
            "type": "Array<ChatResponseChoice>"
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "ChatResponse.ObjectEnum"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number"
        },
        {
            "name": "model",
            "baseName": "model",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ChatResponse.attributeTypeMap;
    }
}

export namespace ChatResponse {
    export enum ObjectEnum {
        Chat = <any> 'chat'
    }
}
